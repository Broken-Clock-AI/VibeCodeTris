(function(){"use strict";const v=16.666666666666668,w=10,O=2,T=60,d=1,g="0.1.0",b=1;class y{constructor(e){this.state=e}nextInt(){let e=this.state+=1831565813;return e=(e^e>>>15)*(e|1),e^=e+(e^e>>>7)*(e|61),(e^e>>>14)>>>0}nextFloat(){return this.nextInt()/4294967296}getState(){return this.state}setState(e){this.state=e}}function a(r,e,t,i){for(let s=0;s<r.length;s++)for(let n=0;n<r[s].length;n++)if(r[s][n]){const o=e+n,p=t+s;if(o<0||o>=10||p>=20||p>=0&&i[p*10+o])return!1}return!0}function P(r,e){const t=r.length,i=Array.from({length:t},()=>Array(t).fill(0));for(let s=0;s<t;s++)for(let n=0;n<t;n++)e===1?i[n][t-1-s]=r[s][n]:i[t-1-n][s]=r[s][n];return i}function I(r,e,t=!1,i=!1){let s=0;if(t)switch(r){case 0:s=400;break;case 1:s=800;break;case 2:s=1200;break;case 3:s=1600;break}else switch(r){case 1:s=100;break;case 2:s=300;break;case 3:s=500;break;case 4:s=800;break}let n=s*e;return i&&(r===4||t)&&(n*=1.5),Math.floor(n)}function C(r){const e=JSON.stringify({...r,checksum:void 0});let t=0;for(let i=0;i<e.length;i++){const s=e.charCodeAt(i);t=(t<<5)-t+s,t|=0}return t}function E(r){if(!r)return console.error("Validation failed: Snapshot is null or undefined."),!1;if(r.protocolVersion!==d)return console.error(`Validation failed: Protocol version mismatch. Expected ${d}, got ${r.protocolVersion}`),!1;if(r.engineVersion!==g&&console.warn(`Validation warning: Engine version mismatch. Expected ${g}, got ${r.engineVersion}`),r.snapshotSchemaVersion!==b)return console.error(`Validation failed: Snapshot schema mismatch. Expected ${b}, got ${r.snapshotSchemaVersion}`),!1;const{checksum:e,...t}=r,i=C(t);return e!==i&&console.error(`Validation failed: Checksum mismatch. Expected ${i}, got ${e}`),r.rows<=0||r.cols<=0||r.boardBuffer.byteLength!==r.rows*r.cols?(console.error("Validation failed: Invalid board dimensions."),!1):r.tick<0||r.snapshotId<0?(console.error("Validation failed: Invalid tick or snapshot ID."),!1):(console.log(`Snapshot ${r.snapshotId} passed validation.`),!0)}const h="IJLOSTZ",S={I:[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],J:[[1,0,0],[1,1,1],[0,0,0]],L:[[0,0,1],[1,1,1],[0,0,0]],O:[[1,1],[1,1]],S:[[0,1,1],[1,1,0],[0,0,0]],T:[[0,1,0],[1,1,1],[0,0,0]],Z:[[1,1,0],[0,1,1],[0,0,0]]};class f{constructor(e){this.prng=new y(e),this.board=new Uint8Array(200).fill(0),this.tickCounter=0,this.bag=[],this.nextTypes=new Uint8Array(6),this.fillBag(),this.fillBag(),this.currentPiece=null,this.holdType=0,this.lockCounter=0,this.gravityCounter=0,this.das=w,this.arr=O,this.dasCounter={left:0,right:0,down:0},this.isMoving={left:!1,right:!1,down:!1},this.score=0,this.level=1,this.lines=0,this.backToBack=0,this.combo=0,this.gameOver=!1,this.events=[]}static fromSnapshot(e){const t=new f(1);if(t.tickCounter=e.tick,t.prng=new y(e.prngState[0]),t.board=new Uint8Array(e.boardBuffer),t.bag=Array.from(e.bagState.bag).map(i=>h[i-1]),t.nextTypes=e.nextTypes,t.holdType=e.holdType,e.current){const i=S[e.current.type],s=[];for(let n=0;n<i.length;n++)s.push(Array.from(e.current.matrix.slice(n*i[0].length,(n+1)*i[0].length)));t.currentPiece={...e.current,matrix:s}}else t.currentPiece=null;return t.lockCounter=e.lockCounter,t.gravityCounter=e.gravityCounter,t.score=e.score,t.level=e.level,t.lines=e.lines,t.backToBack=e.backToBack,t.combo=e.combo,t.events=[],t}setTimings(e,t){this.das=e,this.arr=t}tick(){if(this.gameOver)return this.createSnapshot();if(this.tickCounter++,this.events=[],this.currentPiece||this.spawnPiece(),this.updateMovement(),this.currentPiece){this.gravityCounter++;const e=T;if(this.gravityCounter>=e){this.gravityCounter=0;const t=this.currentPiece.y+1;a(this.currentPiece.matrix,this.currentPiece.x,t,this.board)?this.currentPiece.y=t:this.lockPiece()}}return this.createSnapshot()}handleInput(e){if(!this.currentPiece||this.gameOver)return;let{x:t,y:i,matrix:s}=this.currentPiece;switch(e){case"moveLeft":this.isMoving.left=!0,this.dasCounter.left=0,t--;break;case"moveLeft_release":this.isMoving.left=!1;break;case"moveRight":this.isMoving.right=!0,this.dasCounter.right=0,t++;break;case"moveRight_release":this.isMoving.right=!1;break;case"softDrop":this.isMoving.down=!0,this.dasCounter.down=0,i++;break;case"softDrop_release":this.isMoving.down=!1;break;case"hardDrop":for(;a(s,t,i+1,this.board);)i++;this.currentPiece.y=i,this.lockPiece();return;case"rotateCW":s=P(s,1);break;case"rotateCCW":s=P(s,-1);break}a(s,t,i,this.board)&&(this.currentPiece.x=t,this.currentPiece.y=i,this.currentPiece.matrix=s)}updateMovement(){this.currentPiece&&(this.isMoving.left&&(this.dasCounter.left++,this.dasCounter.left>this.das&&(this.dasCounter.left-this.das)%this.arr===0&&a(this.currentPiece.matrix,this.currentPiece.x-1,this.currentPiece.y,this.board)&&this.currentPiece.x--),this.isMoving.right&&(this.dasCounter.right++,this.dasCounter.right>this.das&&(this.dasCounter.right-this.das)%this.arr===0&&a(this.currentPiece.matrix,this.currentPiece.x+1,this.currentPiece.y,this.board)&&this.currentPiece.x++),this.isMoving.down&&(this.dasCounter.down++,this.dasCounter.down>this.das&&(this.dasCounter.down-this.das)%this.arr===0&&a(this.currentPiece.matrix,this.currentPiece.x,this.currentPiece.y+1,this.board)&&this.currentPiece.y++))}lockPiece(){if(!this.currentPiece)return;for(let i=0;i<this.currentPiece.matrix.length;i++)for(let s=0;s<this.currentPiece.matrix[i].length;s++)if(this.currentPiece.matrix[i][s]){const n=this.currentPiece.x+s,o=this.currentPiece.y+i;if(o<0){this.gameOver=!0,this.events.push({type:"gameOver",tick:this.tickCounter}),this.currentPiece=null;return}this.board[o*10+n]=h.indexOf(this.currentPiece.type)+1}let e=0;const t=[];for(let i=19;i>=0;i--)if(![...this.board.slice(i*10,(i+1)*10)].includes(0)){e++,t.push(i);for(let n=i;n>0;n--)for(let o=0;o<10;o++)this.board[n*10+o]=this.board[(n-1)*10+o];for(let n=0;n<10;n++)this.board[n]=0;i++}if(e>0){this.combo++;const i=!1,s=this.backToBack>0&&(e===4||i),n=I(e,this.level,i,s);this.score+=n,this.lines+=e,this.level=Math.floor(this.lines/10)+1,this.events.push({type:"lineClear",tick:this.tickCounter,data:{rows:t,count:e}}),this.events.push({type:"scoreUpdate",tick:this.tickCounter,data:{score:this.score,lines:this.lines,level:this.level}}),e===4||i?this.backToBack++:this.backToBack=0}else this.combo=0;this.currentPiece=null,this.lockCounter=0,this.spawnPiece()}fillBag(){const e=[...h];for(let t=e.length-1;t>0;t--){const i=Math.floor(this.prng.nextFloat()*(t+1));[e[t],e[i]]=[e[i],e[t]]}this.bag.push(...e),this.updateNextTypes()}updateNextTypes(){for(let e=0;e<this.nextTypes.length;e++)this.nextTypes[e]=h.indexOf(this.bag[e])+1}spawnPiece(){this.bag.length<=7&&this.fillBag();const e=this.bag.shift();this.updateNextTypes();const t=S[e],i=h.indexOf(e)+1;this.currentPiece={type:e,matrix:t,x:Math.floor(10/2)-Math.ceil(t[0].length/2),y:0,rotation:0,colorIndex:i},a(this.currentPiece.matrix,this.currentPiece.x,this.currentPiece.y,this.board)||(this.gameOver=!0,this.events.push({type:"gameOver",tick:this.tickCounter}),this.currentPiece=null)}calculateGhostPosition(){if(!this.currentPiece)return-1;let e=this.currentPiece.y;for(;a(this.currentPiece.matrix,this.currentPiece.x,e+1,this.board);)e++;return e}createSnapshot(){const e=new Uint8Array(this.bag.length);for(let n=0;n<this.bag.length;n++)e[n]=h.indexOf(this.bag[n])+1;const t=this.board.buffer.slice(0),i={protocolVersion:d,engineVersion:g,snapshotSchemaVersion:b,snapshotId:this.tickCounter,tick:this.tickCounter,authoritativeTimeMs:this.tickCounter*(1e3/60),prngState:new Uint32Array([this.prng.getState()]),bagState:{bag:e,index:0},inputQueueCursor:0,lockCounter:this.lockCounter,gravityCounter:this.gravityCounter,backToBack:this.backToBack,combo:this.combo,rows:20,cols:10,boardBuffer:t,current:this.currentPiece?{...this.currentPiece,matrix:new Uint8Array(this.currentPiece.matrix.flat()),ghostY:this.calculateGhostPosition()}:null,nextTypes:this.nextTypes,holdType:this.holdType,score:this.score,level:this.level,lines:this.lines,gameOver:this.gameOver,events:this.events},s=C(i);return{...i,checksum:s}}}if(typeof self>"u"){const{parentPort:r}=require("worker_threads");global.self={postMessage:(e,t)=>{r.postMessage(e,t)},onmessage:null},r.on("message",e=>{global.self.onmessage&&global.self.onmessage({data:e})})}let c=null,u=null,M=0,k=-1;function l(r,e,t){const i={protocolVersion:1,seq:M++,type:r,payload:e};self.postMessage(i,t||[])}function m(){u&&(clearInterval(u),u=null),c=null,console.log("Engine stopped and cleaned up.")}function L(r){m(),console.log(`Worker starting new engine with seed=${r}`),c=new f(r),u=setInterval(x,v),l("log",{level:"info",msg:"Engine started."})}function R(r){E(r)?(m(),console.log(`Worker recovering from snapshot ${r.snapshotId}`),c=f.fromSnapshot(r),u=setInterval(x,v),l("log",{level:"info",msg:`Engine recovered from snapshot ${r.snapshotId}.`})):(console.error("Recovery failed: Received invalid snapshot."),l("fatal",{error:"Cannot recover from invalid snapshot."}))}function x(){if(c)try{const r=c.tick();l("snapshot",r,[r.boardBuffer])}catch(r){console.error("--- FATAL: Engine crashed ---",r),m(),l("fatal",{error:r.message})}}function V(r){const{type:e,payload:t,seq:i}=r;if(i!==void 0&&i<=k){console.warn(`Received out-of-order message. Ignoring seq ${i} (last was ${k}).`),l("log",{level:"warn",msg:"out-of-order"});return}switch(i!==void 0&&(k=i),e){case"start":L(t.seed);break;case"input":if(!c)return;typeof t=="object"&&t.type==="setTimings"?c.setTimings(t.das,t.arr):c.handleInput(t);break;case"recover":R(t);break;case"requestSnapshot":if(!c)return;const s=c.tick();l("snapshot",s,[s.boardBuffer]);break;default:console.warn(`Unknown message type received in worker: ${e}`),l("log",{level:"warn",msg:`Unknown message type: ${e}`});break}}self.onmessage=r=>{V(r.data)},console.log("Worker script loaded and message handler attached.")})();
//# sourceMappingURL=worker-aGWtwGGP.js.map
